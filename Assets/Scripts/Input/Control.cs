//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Input/Control.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace DungeonDefence
{
    public partial class @Control : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @Control()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Control"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""bbd29bd3-3da8-4d00-bfef-147f3c9d779a"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""98a42d69-89b4-4fc6-8a6b-7a7615973338"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveDelta"",
                    ""type"": ""Value"",
                    ""id"": ""9a19a78a-6390-45f7-ad24-a4d07e5afe7e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""031b151d-6f4e-4632-bc00-7636430bf69d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""85782f23-d067-45d4-9893-1968ded29280"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchZoom"",
                    ""type"": ""Button"",
                    ""id"": ""dd122568-981a-4e72-9dc0-bb7616637e20"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPosition0"",
                    ""type"": ""Value"",
                    ""id"": ""29d7bcee-9fa7-43b7-aa0a-18b6ecbc6087"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchPosition1"",
                    ""type"": ""Value"",
                    ""id"": ""284aa516-af30-4512-b885-44f72258174c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1b365556-60ac-4b40-a2b0-4230dc035545"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78982820-43be-4288-a45c-7e8ff9355523"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""479fdde0-251f-4ea0-8c88-cf655150da8a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bc875f4-a67d-4b56-80f6-f88aaa8b81c5"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""466ece8d-1f13-46be-9d66-454a558a4491"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cfc7c67-7816-4712-853d-feb1f2ae79aa"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""0198018e-c87f-494d-b264-f27ba9e6cd7d"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchZoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""ea493349-743b-42f4-b6fc-0e630b52eec0"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""3c22d0a9-b2e7-4e06-8bb9-22bc1732c48a"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7c94107b-2f4e-484b-9e63-5a1d9af65e94"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a036c6e-f1b6-4719-82a1-dede1f5b27a9"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Main
            m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
            m_Main_Move = m_Main.FindAction("Move", throwIfNotFound: true);
            m_Main_MoveDelta = m_Main.FindAction("MoveDelta", throwIfNotFound: true);
            m_Main_MouseScroll = m_Main.FindAction("MouseScroll", throwIfNotFound: true);
            m_Main_MousePosition = m_Main.FindAction("MousePosition", throwIfNotFound: true);
            m_Main_TouchZoom = m_Main.FindAction("TouchZoom", throwIfNotFound: true);
            m_Main_TouchPosition0 = m_Main.FindAction("TouchPosition0", throwIfNotFound: true);
            m_Main_TouchPosition1 = m_Main.FindAction("TouchPosition1", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Main
        private readonly InputActionMap m_Main;
        private IMainActions m_MainActionsCallbackInterface;
        private readonly InputAction m_Main_Move;
        private readonly InputAction m_Main_MoveDelta;
        private readonly InputAction m_Main_MouseScroll;
        private readonly InputAction m_Main_MousePosition;
        private readonly InputAction m_Main_TouchZoom;
        private readonly InputAction m_Main_TouchPosition0;
        private readonly InputAction m_Main_TouchPosition1;
        public struct MainActions
        {
            private @Control m_Wrapper;
            public MainActions(@Control wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Main_Move;
            public InputAction @MoveDelta => m_Wrapper.m_Main_MoveDelta;
            public InputAction @MouseScroll => m_Wrapper.m_Main_MouseScroll;
            public InputAction @MousePosition => m_Wrapper.m_Main_MousePosition;
            public InputAction @TouchZoom => m_Wrapper.m_Main_TouchZoom;
            public InputAction @TouchPosition0 => m_Wrapper.m_Main_TouchPosition0;
            public InputAction @TouchPosition1 => m_Wrapper.m_Main_TouchPosition1;
            public InputActionMap Get() { return m_Wrapper.m_Main; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
            public void SetCallbacks(IMainActions instance)
            {
                if (m_Wrapper.m_MainActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                    @MoveDelta.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMoveDelta;
                    @MoveDelta.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMoveDelta;
                    @MoveDelta.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMoveDelta;
                    @MouseScroll.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMouseScroll;
                    @MouseScroll.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMouseScroll;
                    @MouseScroll.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMouseScroll;
                    @MousePosition.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePosition;
                    @MousePosition.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePosition;
                    @MousePosition.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePosition;
                    @TouchZoom.started -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchZoom;
                    @TouchZoom.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchZoom;
                    @TouchZoom.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchZoom;
                    @TouchPosition0.started -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchPosition0;
                    @TouchPosition0.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchPosition0;
                    @TouchPosition0.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchPosition0;
                    @TouchPosition1.started -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchPosition1;
                    @TouchPosition1.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchPosition1;
                    @TouchPosition1.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnTouchPosition1;
                }
                m_Wrapper.m_MainActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @MoveDelta.started += instance.OnMoveDelta;
                    @MoveDelta.performed += instance.OnMoveDelta;
                    @MoveDelta.canceled += instance.OnMoveDelta;
                    @MouseScroll.started += instance.OnMouseScroll;
                    @MouseScroll.performed += instance.OnMouseScroll;
                    @MouseScroll.canceled += instance.OnMouseScroll;
                    @MousePosition.started += instance.OnMousePosition;
                    @MousePosition.performed += instance.OnMousePosition;
                    @MousePosition.canceled += instance.OnMousePosition;
                    @TouchZoom.started += instance.OnTouchZoom;
                    @TouchZoom.performed += instance.OnTouchZoom;
                    @TouchZoom.canceled += instance.OnTouchZoom;
                    @TouchPosition0.started += instance.OnTouchPosition0;
                    @TouchPosition0.performed += instance.OnTouchPosition0;
                    @TouchPosition0.canceled += instance.OnTouchPosition0;
                    @TouchPosition1.started += instance.OnTouchPosition1;
                    @TouchPosition1.performed += instance.OnTouchPosition1;
                    @TouchPosition1.canceled += instance.OnTouchPosition1;
                }
            }
        }
        public MainActions @Main => new MainActions(this);
        public interface IMainActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnMoveDelta(InputAction.CallbackContext context);
            void OnMouseScroll(InputAction.CallbackContext context);
            void OnMousePosition(InputAction.CallbackContext context);
            void OnTouchZoom(InputAction.CallbackContext context);
            void OnTouchPosition0(InputAction.CallbackContext context);
            void OnTouchPosition1(InputAction.CallbackContext context);
        }
    }
}
